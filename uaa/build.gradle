Project identityModels = parent.subprojects.find { it.name.equals('cloudfoundry-identity-models') }
Project identityCommon = parent.subprojects.find { it.name.equals('cloudfoundry-identity-common') }
Project identityScim = parent.subprojects.find { it.name.equals('cloudfoundry-identity-scim') }
Project identityLogin = parent.subprojects.find { it.name.equals('cloudfoundry-identity-login') }

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
    }
}

apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'spring-boot'

jar {
    baseName = 'cloudfoundry-identity-uaa'
    version =  '3.0.0'
}

processResources {
  //maven replaces project.artifactId in the log4j.properties file
  //https://www.pivotaltracker.com/story/show/74344574
  from(new File('../common/src/main/resources/log4j.properties'))
  filter { line -> line.contains('${project.artifactId}') ? line.replace('${project.artifactId}','cloudfoundry-identity-uaa') : line }
}

//war {
    //workaround for maven <scope>optional</scope>
//    rootSpec.exclude("**/spring-security-oauth-*.jar")
//}

apply plugin: 'eclipse-wtp'
eclipse {
	wtp {
	    component {
	      contextPath = 'uaa'
	    }
	}
}

description = 'UAA'

dependencies {
  compile("org.springframework.boot:spring-boot-starter-web") {
    exclude module: "spring-boot-starter-logging"
    exclude module: "logback-classic"
  }
  providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

  compile(identityCommon) {
    exclude(module: 'jna')
  }
  compile(identityScim) {
    exclude(module: 'jna')
  }
  compile(identityLogin) {
    exclude(module: 'jna')
  }
  compile group: 'cglib', name: 'cglib', version:'2.2.2'
  runtime group: 'org.springframework.security', name: 'spring-security-config', version:parent.springSecurityVersion
  runtime group: 'org.springframework.security', name: 'spring-security-jwt', version:'1.0.1.RELEASE'
  runtime group: 'org.springframework.retry', name: 'spring-retry', version:'1.0.2.RELEASE'
  runtime group: 'org.aspectj', name: 'aspectjweaver', version:'1.6.9'
  runtime group: 'org.apache.tomcat', name: 'tomcat-jdbc', version:parent.tomcatVersion
  runtime group: 'javax.servlet', name: 'jstl', version:'1.2'
  runtime group: 'postgresql', name: 'postgresql', version:parent.postgresqlVersion

  testCompile identityCommon.configurations.testCompile.dependencies
  testCompile identityCommon.sourceSets.test.output
  testCompile identityScim.sourceSets.test.output
  testCompile identityLogin.sourceSets.test.output

  testCompile(group: 'org.apache.directory.server', name: 'apacheds-core', version:'1.5.5') {
    exclude(module: 'bcprov-jdk15')
    exclude(module: 'slf4j-api')
    exclude(module: 'slf4j-log4j12')
  }
  testCompile(group: 'org.apache.directory.server', name: 'apacheds-protocol-ldap', version:'1.5.5') {
    exclude(module: 'bcprov-jdk15')
    exclude(module: 'slf4j-api')
    exclude(module: 'slf4j-log4j12')
  }
//  providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.0.1'
//  providedCompile group: 'javax.servlet.jsp', name: 'jsp-api', version:'2.1'
  runtime group: 'javax.servlet', name: 'javax.servlet-api', version:parent.servletVersion
  runtime group: 'javax.servlet.jsp', name: 'jsp-api', version:'2.1'
  testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:'2.42.2'
  testCompile group: 'com.github.detro.ghostdriver', name: 'phantomjsdriver', version:'1.1.0'
  testCompile group: 'dumbster', name: 'dumbster', version:'1.6'
  testCompile group: 'org.reflections', name: 'reflections', version: '0.9.10'
  testCompile group: 'org.skyscreamer', name:'jsonassert', version: '0.9.0'


}

test {
  exclude 'org/cloudfoundry/identity/uaa/integration/*.class'
  exclude '**/*IT.class'
  systemProperty "mock.suite.test", "true"
}

task integrationTest(type: Test) {
  dependsOn parent.cargoStartLocal

  filter {
    includeTestsMatching "org.cloudfoundry.identity.uaa.integration.*"
    includeTestsMatching "*IT"
  }
}
